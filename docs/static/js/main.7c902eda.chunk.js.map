{"version":3,"sources":["components/AddCategory.js","helpers/getGisf.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/CleanButton.js","GifExpertApp.js","index.js","logo.svg"],"names":["AddCategory","setCategoties","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","placeholder","protoType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGif","logo","key","CleanButton","onClick","GifExpertApp","cat","ReactDOM","render","document","getElementById","module","exports"],"mappings":"gQAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,0BAAMC,SAVU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAoBO,OAEhDN,EAAc,MAKV,2BAAOO,KAAK,OACRC,MAAOT,EACPU,SAfc,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,QAgB5CG,YAAY,mBAK5Bf,EAAYgB,UAAY,CACpBf,cAAcgB,IAAUC,KAAKC,Y,2BC7BpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAebM,GAfa,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,K,gBCAHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHd,SAACA,GAAc,IAAD,EAEXnB,mBAAS,CAC/B0B,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAmBrC,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAd,GACFe,YAAW,WACPH,EAAS,CACLf,KAAMG,EACNU,SAAS,MAEd,UAEZ,CAACpB,IAEGqB,EDN0BK,CAAY1B,GAAhCa,EAVwB,EAU7BN,KAAaa,EAVgB,EAUhBA,QAGrB,OACI,kBAAC,WAAD,KACI,wBAAIJ,UAAU,qBAAqBhB,GAGlCoB,GAAY,yBAAKH,IAAKU,IAAMX,UAAU,WAAWE,IAAI,SAEtD,yBAAKF,UAAU,aAGPH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEzBvDmB,EAAc,SAAC,GAAuB,IAArBjD,EAAoB,EAApBA,cAI1B,OACI,kBAAC,WAAD,KACI,4BAAQkD,QAJI,kBAAMlD,EAAc,KAIFoC,UAAU,aAAxC,YAKZa,EAAYlC,UAAY,CACpBf,cAAegB,IAAUC,KAAKC,YCX3B,IAAMiC,EAAe,WAAO,IAAD,EAEMlD,mBAAS,IAFf,mBAEvBQ,EAFuB,KAEXT,EAFW,KAO9B,OACI,kBAAC,WAAD,KACI,4CAAkB,MAClB,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACKS,EAAWoB,KAAI,SAAAuB,GAAG,OAAI,kBAAC,EAAD,CAAShC,SAAUgC,EAAKJ,IAAKI,U,MCdpEC,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.7c902eda.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setCategoties }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e) => setInputValue(e.target.value)\r\n\r\n    const handleSumit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length > 2 ) {\r\n            setCategoties(categories => [ inputValue,...categories])\r\n        }\r\n        setInputValue(\"\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSumit}>\r\n            <input type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Add Category\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protoType = {\r\n    setCategoties:PropTypes.func.isRequired         \r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=yYaQxspvs6UprcBeACdBau5hy97AtoiS`\r\n\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gif = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n     \r\n   return gif\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport logo from '../logo.svg';\r\n// import { getGifs } from '../helpers/getGisf'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    // const [images, setImages] = useState([])\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then(setImages)\r\n    // }, [category])\r\n\r\n\r\n    const { data:images, loading } = useFetchGif(category)\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__bounceIn\">{category}</h3>\r\n\r\n            {/* {loading && <p>Cargando...</p>} */}\r\n            {loading &&  <img src={logo} className=\"App-logo\" alt=\"logo\" />}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => <GifGridItem key={img.id} {...img} />)\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGisf'\r\n\r\nexport const useFetchGif = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(img => {\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: img,\r\n                        loading: false\r\n                    })\r\n                }, 500);\r\n            })\r\n    }, [category])\r\n\r\n    return state\r\n\r\n}","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const CleanButton = ({ setCategoties }) => {\r\n\r\n    const handleClear = () => setCategoties([])\r\n\r\n    return (\r\n        <Fragment>\r\n            <button onClick={handleClear} className=\"btn-clean\">Clear </button>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCleanButton.protoType = {\r\n    setCategoties: PropTypes.func.isRequired\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\nimport { CleanButton } from './components/CleanButton'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategoties] = useState([])\r\n\r\n    // const addCategory = () => setCategoties([...categories, \"Gohan\"])\r\n    // const addCategory = () => setCategoties(categories => [...categories, \"Gohan\"])\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp {\":)\"}</h2>\r\n            <AddCategory setCategoties={setCategoties} />\r\n            <CleanButton setCategoties={setCategoties} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map(cat => <GifGrid category={cat} key={cat} />)}\r\n            </ol>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}